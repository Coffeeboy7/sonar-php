<sqale>
	<chc>
		<key>REUSABILITY</key>
		<name>Reusability</name>
		<chc>
			<key>MODULARITY</key>
			<name>Modularity</name>
		</chc>
		<chc>
			<key>TRANSPORTABILITY</key>
			<name>Transportability</name>
		</chc>
	</chc>
	<chc>
		<key>PORTABILITY</key>
		<name>Portability</name>
		<chc>
			<key>COMPILER_RELATED_PORTABILITY</key>
			<name>Compiler related portability</name>
		</chc>
		<chc>
			<key>HARDWARE_RELATED_PORTABILITY</key>
			<name>Hardware related portability</name>
		</chc>
		<chc>
			<key>LANGUAGE_RELATED_PORTABILITY</key>
			<name>Language related portability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.NamingConventions.ConstructorName.OldStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.NamingConventions.ConstructorName.OldStyleCall</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.GlobalKeyword.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.CallTimePassByReference.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Naming Rules/ConstructorWithNameAsEnclosingClass</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>OS_RELATED_PORTABILITY</key>
			<name>OS related portability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Files.LineEndings.InvalidEOLChar</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>constant_resource</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.CSS.BrowserSpecificStyles.ForbiddenStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>h</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>SOFTWARE_RELATED_PORTABILITY</key>
			<name>Software related portability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.DisallowNewWidget.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Files.IncludingFile.UseInclude</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Files.IncludingFile.UseIncludeOnce</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Files.IncludingFile.UseRequire</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Files.IncludingFile.UseRequireOnce</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>TIME_ZONE_RELATED_PORTABILITY</key>
			<name>Time zone related portability</name>
		</chc>
	</chc>
	<chc>
		<key>MAINTAINABILITY</key>
		<name>Maintainability</name>
		<chc>
			<key>READABILITY</key>
			<name>Readability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.CommentedOutCode.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Formatting.DisallowMultipleStatements.SameLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.WhiteSpace.DisallowTabIndent.TabsUsed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>constant_resource</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.ForLoopShouldBeWhileLoop.CanSimplify</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Files.IncludingFile.BracketsNotRequired</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.ControlStructures.InlineControlStructure.Discouraged</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.ControlStructures.InlineControlStructure.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Files.LineLength.MaxExceeded</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Files.LineLength.TooLong</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/ExcessiveMethodLength</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.WhiteSpace.ScopeIndent.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.SelfMemberReference.IncorrectCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.SelfMemberReference.SpaceAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.SelfMemberReference.SpaceBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.UnnecessaryFinalModifier.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Strings.UnnecessaryStringConcat.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.NamingConventions.UpperCaseConstantName.ClassConstantNotUpperCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.NamingConventions.UpperCaseConstantName.ConstantNotUpperCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.ValidDefaultValue.NotAtEnd</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayBracketSpacing.SpaceAfterBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayBracketSpacing.SpaceBeforeBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.FirstIndexNoNewline</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.FirstValueNoNewline</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.KeyNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.MulitLineNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NoComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NoCommaAfterLast</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NoSpaceAfterComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NoSpaceAfterDoubleArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NoSpaceBeforeDoubleArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NotLowerCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SpaceAfterComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SpaceAfterDoubleArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SpaceAfterKeyword</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SpaceBeforeDoubleArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.SpaceInEmptyArray</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.ValueNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.FirstLineIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.HasEmptyLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.HasEmptyLineBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.LastLineIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.LineIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.NoCaptial</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.NoEmptyLineAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.NoEmptyLineBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.NoNewLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.BlockComment.SingleLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.CastSpacing.ContainsWhiteSpace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.LongNotCaptial</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.ShortFullStop</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.ShortNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.ShortSingleLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.SpacingAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.SpacingAfterShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.SpacingBeforeShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.SpacingBeforeShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.SpacingBetween</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.TagIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.WrongStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.CloseBraceSameLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.EndFileAfterCloseBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.MissingBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Classes.ClassDeclaration.MissingBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.NewLineBeforeCloseBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.NewlinesAfterCloseBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.NoNewlineAfterCloseBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.NoSpaceBeforeName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Classes.ClassDeclaration.OpenBraceNewLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Classes.ClassDeclaration.OpenBraceNotAlone</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Classes.ClassDeclaration.OpenBraceWrongLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpaceAfterKeyword</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpaceAfterName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Classes.ClassDeclaration.SpaceBeforeBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpaceBeforeCloseBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpaceBeforeComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpaceBeforeKeyword</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpaceBeforeName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.SpacesBeforeKeyword</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingAfterClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ClassDefinitionClosingBraceSpace.SpacingBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ClassDefinitionNameSpacing.BlankLinesFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.After</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.Before</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ClassDefinitionOpeningBraceSpace.NoneBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Zend.Files.ClosingTag.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ColonSpacing.After</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ColonSpacing.AfterNewline</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ColonSpacing.Before</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ColonSpacing.NoneAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ColourDefinition.NotUpper</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.ColourDefinition.Shorthand</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Operators.ComparisonOperatorUsage.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Naming Rules/ConstantNamingConventions</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ConstantCase.</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ControlStructureSpacing.LineAfterClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ControlStructureSpacing.SpaceBeforeCloseBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpenBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Debug.DebugCode.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.DisallowMultipleAssignments.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.DisallowMultipleStyleDefinitions.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.DisallowShortOpenTag.EchoFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.DisallowShortOpenTag.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.DocCommentAlignment.NoSpaceBeforeTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.DocCommentAlignment.SpaceBeforeAsterisk</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.DocCommentAlignment.SpaceBeforeTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Strings.EchoedStrings.HasBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ElseIfDeclaration.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.ContentAfterEnd</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.ContentAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.Indent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.MultipleStatements</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.NoSemicolon</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.NoSpaceBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.SpacingAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.EmbeddedPhp.SpacingBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.ContentAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.CopyrightHyphen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.DescriptionSpacing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.DuplicateTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.LongNotCaptial</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.ShortFullStop</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.ShortNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.ShortSingleLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.SpacingAfterComment</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.SpacingAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.SpacingBeforeShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.SpacingBetween</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.TagIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.TagIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.WrongStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceAfterAs</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.NoSpaceBeforeAs</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.SpaceBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeArrow</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.NoOpenBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterFirst</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.NoSpaceAfterSecond</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterFirst</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.SpacingAfterSecond</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeFirst</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.ForLoopDeclaration.SpacingBeforeSecond</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceAfterEquals</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.FunctionCallArgumentSpacing.NoSpaceBeforeEquals</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.FunctionCallArgumentSpacing.SpaceBeforeComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.FunctionCallArgumentSpacing.TooMuchSpaceAfterComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.CloseBracketLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.Indent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.SpaceAfterCloseBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionCallSignature.SpaceBeforeOpenBracket</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionClosingBraceSpace.ContentBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeNestedClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBetween</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Commenting.FunctionComment.ApiSpacing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Commenting.FunctionComment.ApiTagIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Commenting.FunctionComment.ApiTagSpacing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.LongNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ParamCommentFullStop</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ParamCommentNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ParameterCommentsNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ParameterNamesNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.ParameterNamesNotAligned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ReturnIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SeeIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SeeOrder</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ShortFullStop</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ShortNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ShortSingleLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingAfterLongName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingAfterLongName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingAfterLongType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingAfterLongType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingAfterParams</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingAfterParams</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingAfterShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingBeforeParams</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingBeforeParams</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingBeforeParamType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingBeforeParamType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingBeforeShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingBeforeShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.SpacingBetween</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ThrowsNoFullStop</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ThrowsNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionCommentThrowTag.FailedParse</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.WrongStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.WrongStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSapceBeforeHint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.NoSpaceBeforeArg</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceAfterDefault</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpaceBeforeEquals</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpenHint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeArg</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeHint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBetween</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.BraceIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.BraceOnSameLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.CloseBracketLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.cod</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.Indent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.NewlineBeforeOpenBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Functions.FunctionDeclaration.NoSpaceBeforeOpenBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.ContentBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingAfterNested</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionOpeningBraceSpace.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionSpacing.After</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.FunctionSpacing.Before</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.Heredoc.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Operators.IncrementDecrementUsage.NoBrackets</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.Indentation.BlankLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.Indentation.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.DocBlock</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.InvalidEndChar</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.NoSpaceBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.NotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.InlineComment.WrongStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.InlineComment.WrongStyle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.InlineIfDeclaration.NoBrackets</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterElse</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Strings.JoinStrings.ArrayNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.LanguageConstructSpacing.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.LanguageConstructSpacing.IncorrectSingle</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.LogicalOperatorSpacing.NoSpaceBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.LogicalOperatorSpacing.TooMuchSpaceBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.LongConditionClosingComment.Invalid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.LongConditionClosingComment.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.LowercaseClassKeywords.FoundUppercase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.LowerCaseConstant.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.LowercaseDeclaration.FoundUppercase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.LowercaseFunctionKeywords.FoundUppercase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.LowercasePHPFunctions.CallUppercase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.LowercasePHPFunctions.KeywordUppercase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.LowercaseStyleDefinition.FoundUpper</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.MemberVarSpacing.After</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Naming Rules/ShortMethodName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.MissingColon.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Formatting.MultiLineAssignment.EqualSignLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Formatting.MultiLineAssignment.Indent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.ControlStructures.MultiLineCondition.Alignment</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.ControlStructures.MultiLineCondition.CloseBracketNewLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.ControlStructures.MultiLineCondition.NoSpaceBeforeOpenBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.ControlStructures.MultiLineCondition.SpaceBeforeOpenBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.ControlStructures.MultiLineCondition.StartWithBoolean</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.MultiLineFunctionDeclaration.ContentAfterComma</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.MultiLineFunctionDeclaration.FirstParamSpacing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.MultiLineFunctionDeclaration.OneParamPerLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Formatting.MultipleStatementAlignment.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Naming Rules/BooleanGetMethodName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Formatting.NoSpaceAfterCast.SpaceFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Objects.ObjectMemberComma.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.WhiteSpace.ObjectOperatorIndent.StartOfLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ObjectOperatorSpacing.After</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ObjectOperatorSpacing.Before</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.Opacity.SpacingAfterPoint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.Opacity.StartWithPoint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.Opacity.PointNotRequired</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.OpeningFunctionBraceBsdAllman.BraceSpacing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Functions.OpeningFunctionBraceKernighanRitchie.SpaceBeforeBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Formatting.OperatorBracket.MissingBrackets</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Formatting.OperatorBracket.SpacingAfterMinus</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceAfterAmp</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.NoSpaceBeforeAmp</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.SpacingAfterAmp</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.SpacingBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.OperatorSpacing.SpacingBeforeAmp</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.PropertyLabelSpacing.After</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.PropertyLabelSpacing.Before</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ScopeClosingBrace.Indent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.WhiteSpace.ScopeClosingBrace.Indent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.WhiteSpace.ScopeClosingBrace.Line</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.WhiteSpace.ScopeIndent.</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.WhiteSpace.ScopeIndent.typ</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.ScopeKeywordSpacing.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.SemicolonSpacing.Incorrect</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.SemicolonSpacing.NotAtEnd</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.SemicolonSpacing.SpaceFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Formatting.SpaceAfterCast.NoSpace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Formatting.SpaceAfterCast.TooMuchSpace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.BreakIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.CaseIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.CloseBraceAlign</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.DefaultIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.DefaultNotLower</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpaceBeforeColon</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterBreak</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefault</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpacingAfterDefaultBreak</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeBreak</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.SpacingBeforeDefaultColon</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.UpperCaseConstant.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ValidClassName.MissingBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ValidClassName.NotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidClassName.StartWithCaptial</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidFunctionName.DoubleUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.FunctionDoubleUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.FunctionInvalid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.FunctionNameInvalid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.FunctionNoCaptial</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.FunctionUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.MethodDoubleUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.NotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidFunctionName.NotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.PrivateNoUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.PublicUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidFunctionName.ScopeNotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Zend.NamingConventions.ValidVariableName.MemberVarNotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Zend.NamingConventions.ValidVariableName.NotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidVariableName.NotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Zend.NamingConventions.ValidVariableName.PrivateNoUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidVariableName.PrivateNoUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Zend.NamingConventions.ValidVariableName.PublicHasUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidVariableName.PublicHasUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidVariableName.PublicUnderscore</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.NamingConventions.ValidVariableName.StringNotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Zend.NamingConventions.ValidVariableName.StringVarNotCamelCaps</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Naming Rules/ShortVariable</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Naming Rules/LongVariable</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.ContentAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.LongNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.MissingShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.SeesIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.ShortFullStop</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.ShortNotCapital</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.ShortSingleLine</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.SpacingAfter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.SpacingBeforeShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.SpacingBeforeTags</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.SpacingBetween</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.VarIndent</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClosingDeclarationComment.MissingBrace</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Objects.DisallowObjectStringIndex.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>UNDERSTANDABILITY</key>
			<name>Understandability</name>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Design Rules/GotoStatement</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/ExcessiveClassLength</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>h</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.EmptyStatement.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.EmptyStatement.NotAllowedWarning</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.FunctionDuplicateArgument.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.JumbledIncrementer.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/ExcessiveParameterList</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Metrics.NestingLevel.MaxExceeded</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Metrics.NestingLevel.TooHigh</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.NonExecutableCode.ReturnNotRequired</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.NonExecutableCode.Unreachable</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Objects.ObjectInstantiation.NotAssigned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.SelfMemberReference.NotUsed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Unused Code Rules/UnusedLocalVariable</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Unused Code Rules/UnusedPrivateField</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Unused Code Rules/UnusedPrivateMethod</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.UnusedFunctionParameter.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.UselessOverridingMethod.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/ExcessiveClassComplexity</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>h</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.KeySpecified</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Arrays.ArrayDeclaration.NoKeySpecified</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.EmptyCopyright</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.EmptyVersion</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.InvalidVersion</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.MissingShort</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.ClassComment.MissingTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClassComment.TagNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassDeclaration.MultipleClasses</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.ClassFileName.NoMatch</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.DisallowComparisonAssignment.AssignedBool</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.DisallowComparisonAssignment.AssignedComparison</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Channels.DisallowSelfActions.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.DisallowSizeFunctionsInLoops.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Strings.DoubleQuoteUsage.ContainsVar</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Strings.DoubleQuoteUsage.NotRequired</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.EmptyCatchComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.EmptyClassDefinition.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.EmptyStyleDefinition.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.DuplicateTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptyAuthors</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptyCategory</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptyCopyright</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptyLicense</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptyPackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptySubpackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.EmptyVersion</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.IncorrectAuthor</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.IncorrectCopyright</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.IncorrectLicenseName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.IncorrectLicenseURL</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.IncorrectPackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.IncorrectSubpackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.InvalidAuthors</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.InvalidCategory</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.InvalidCopyright</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.InvalidPackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.InvalidSubpackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.InvalidVersion</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingAuthor</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingCopyright</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingLicense</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingLinceseName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingLinceseURL</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingPackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingSubpackage</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.MissingTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.MissingTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.MissingVersion</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.TagNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FileComment.TagOrder</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.TagsNotGrouped</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FileComment.WrongTagOrder</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Files.FileExtension.ClassFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Files.FileExtension.NoClass</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Commenting.FunctionComment.ApiNotFirst</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Commenting.FunctionComment.ApiNotLast</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.cod</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.cod</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ContentAfterOpen</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.DuplicateReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.EmptyReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.EmptySee</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.EmptyThrows</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.EmptyThrows</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.ExtraParamComment</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ExtraParamComment</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.IncorrectParamVarName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.IncorrectTypeHint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.InvalidNoReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.InvalidReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.InvalidReturnNotVoid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.InvalidReturnVoid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.InvalidThrows</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.InvalidTypeHint</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.MissingParamComment</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingParamComment</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingParamName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.MissingParamName</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.MissingParamTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingParamTag</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.MissingParamType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingParamType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.MissingReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.MissingReturnType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.Commenting.FunctionComment.ParamNameNoMatch</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ReturnNotRequired</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ReturnOrder</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.TagNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Commenting.FunctionComment.TagNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.ThrowsOrder</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionCommentThrowTag.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionCommentThrowTag.WrongNumber</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionCommentThrowTag.WrongType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.FunctionComment.TypeHintMissing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Operators.IncrementDecrementUsage.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Operators.IncrementDecrementUsage.</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.InnerFunctions.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.LongConditionClosingComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Scope.MethodScope.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.PostStatementComment.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.EmptyCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.EmptyDefault</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Commenting.Todo.TaskFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Unused Code Rules/UnusedFormalParameter</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Channels.UnusedSystem.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>PEAR.NamingConventions.ValidClassName.Invalid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Operators.ValidLogicalOperators.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.DuplicateVar</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.Empty</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.EmptySees</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.IncorrectVarType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.MissingVar</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.MissingVarType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.TagNotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.VariableComment.VarOrder</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Commenting.ClosingDeclarationComment.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
	</chc>
	<chc>
		<key>SECURITY</key>
		<name>Security</name>
		<chc>
			<key>API_ABUSE</key>
			<name>API abuse</name>
		</chc>
		<chc>
			<key>ERRORS</key>
			<name>Errors</name>
		</chc>
		<chc>
			<key>INPUT_VALIDATION_AND_REPRESENTATION</key>
			<name>Input validation and representation</name>
		</chc>
		<chc>
			<key>SECURITY_FEATURES</key>
			<name>Security features</name>
		</chc>
	</chc>
	<chc>
		<key>EFFICIENCY</key>
		<name>Efficiency</name>
		<chc>
			<key>MEMORY_EFFICIENCY</key>
			<name>Memory use</name>
		</chc>
		<chc>
			<key>CPU_EFFICIENCY</key>
			<name>Processor use</name>
		</chc>
	</chc>
	<chc>
		<key>CHANGEABILITY</key>
		<name>Changeability</name>
		<chc>
			<key>ARCHITECTURE_CHANGEABILITY</key>
			<name>Architecture related changeability</name>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Design Rules/NumberOfChildren</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>d</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Design Rules/DepthOfInheritance</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>4.0</val>
					<txt>h</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/TooManyFields</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>40.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/TooManyMethods</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>40.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/ExcessivePublicCount</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>40.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.DuplicateClassDefinition.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Functions.GlobalFunction.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>DATA_CHANGEABILITY</key>
			<name>Data related changeability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.DuplicateStyleDefinition.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>LOGIC_CHANGEABILITY</key>
			<name>Logic related changeability</name>
		</chc>
	</chc>
	<chc>
		<key>RELIABILITY</key>
		<name>Reliability</name>
		<chc>
			<key>ARCHITECTURE_RELIABILITY</key>
			<name>Architecture related reliability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Classes.DuplicateClassName.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>1.0</val>
					<txt>h</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Classes.DuplicateProperty.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Scope.MemberVarScope.Missing</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>5.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>DATA_RELIABILITY</key>
			<name>Data related reliability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.CSS.Opacity.Invalid</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>EXCEPTION_HANDLING</key>
			<name>Exception handling</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.NoSilencedErrors.Forbidden</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.NoSilencedErrors.Discouraged</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>FAULT_TOLERANCE</key>
			<name>Fault tolerance</name>
		</chc>
		<chc>
			<key>INSTRUCTION_RELIABILITY</key>
			<name>Instruction related reliability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.ForLoopWithTestFunctionCall.NotAllowed</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.Scope.StaticThisUsage.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.CodeAnalysis.UnconditionalIfStatement.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>10.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.AssignThis.NotSelf</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Channels.ChannelException.WrongExceptionType</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.CreateWidgetTypeCallback.CallbackNotCalled</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.CreateWidgetTypeCallback.FirstArgNotCallback</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.CreateWidgetTypeCallback.FirstArgNotSelf</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.CreateWidgetTypeCallback.NoReturn</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Objects.CreateWidgetTypeCallback.ReturnValue</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.PHP.Eval.Discouraged</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.PHP.EvalObjectFactory.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.PHP.ForbiddenFunctions.Found</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.PHP.GetRequestData.WithVar</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Channels.IncludeSystem.NotIncludedCall</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Channels.IncludeSystem.NotIncludedExtends</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.DefaultNoBreak</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.MissingCase</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Squiz.ControlStructures.SwitchDeclaration.MissingDefault</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>LOGIC_RELIABILITY</key>
			<name>Logic related reliability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.PHP.ReturnFunctionValue.NotAssigned</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>20.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>SYNCHRONIZATION_RELIABILITY</key>
			<name>Synchronization related reliability</name>
		</chc>
		<chc>
			<key>UNIT_TESTS</key>
			<name>Unit tests</name>
		</chc>
	</chc>
	<chc>
		<key>TESTABILITY</key>
		<name>Testability</name>
		<chc>
			<key>INTEGRATION_TESTABILITY</key>
			<name>Integration level testability</name>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>MySource.Debug.FirebugConsole.ConflictFound</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
		<chc>
			<key>UNIT_TESTABILITY</key>
			<name>Unit level testability</name>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Design Rules/CouplingBetweenObjects</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>2.0</val>
					<txt>h</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Design Rules/EvalExpression</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Design Rules/ExitExpression</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/CyclomaticComplexity</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>phppmd_rules</rule-repo>
				<rule-key>Code Size Rules/NPathComplexity</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Metrics.CyclomaticComplexity.MaxExceeded</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
			<chc>
				<rule-repo>php_codesniffer_rules</rule-repo>
				<rule-key>Generic.Metrics.CyclomaticComplexity.TooHigh</rule-key>
				<prop>
					<key>remediationFunction</key>
					<txt>linear</txt>
				</prop>
				<prop>
					<key>remediationFactor</key>
					<val>30.0</val>
					<txt>mn</txt>
				</prop>
			</chc>
		</chc>
	</chc>
</sqale>